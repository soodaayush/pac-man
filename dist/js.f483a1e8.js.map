{"version":3,"sources":["js/setup.js","js/GhostMoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","js/GameBoard.js","js/Pacman.js","js/Ghost.js","js/index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","randomMovement","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","GameBoard","DOMGrid","pos","object","grid","classList","contains","dotCount","gameWin","div","document","createElement","add","innerHTML","appendChild","level","style","cssText","forEach","square","push","classes","remove","deg","transform","character","shouldMove","getNextMove","makeMove","classesToRemove","classesToAdd","rotateDiv","removeObject","addObject","setNewPos","board","createGrid","Pacman","speed","startPos","timer","powerPill","e","keyCode","Ghost","name","isScared","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","score","powerPillActive","powerPillTimer","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","handleKeyInput","showGameStatus","clearInterval","textContent","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","gameLoop","moveCharacter","soundDot","soundPill","clearTimeout","setTimeout","startGame","soundGameStart","addEventListener","setInterval"],"mappings":";AAuDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAvDA,IAAMA,EAAY,GAuDlB,QAAA,UAAA,EAtDA,IAAMC,EAAY,GAsDlB,QAAA,UAAA,EArDA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAkCP,QAAA,WAAA,EA9BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAkBN,QAAA,YAAA,EAdA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"js.f483a1e8.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\n\n// Primitive random movement\nexport function randomMovement(position, direction, objectExist) {\n  let dir = direction;\n  let nextMovePos = position + dir.movement;\n\n  // Create an array from the directions object keys\n\n  const keys = Object.keys(DIRECTIONS);\n\n  while (\n    objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n    objectExist(nextMovePos, OBJECT_TYPE.GHOST)\n  ) {\n    // Get a random key from the key array\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    // Set the move\n    dir = DIRECTIONS[key];\n    // Set the next move\n    nextMovePos = position + dir.movement;\n  }\n\n  return { nextMovePos, direction: dir };\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from \"./setup\";\n\nclass GameBoard {\n  constructor(DOMGrid) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid = DOMGrid;\n  }\n\n  showGameStatus(gameWin) {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"game-status\");\n    div.innerHTML = `${gameWin ? \"WIN\" : \"GAME OVER\"}`;\n    this.DOMGrid.appendChild(div);\n  }\n\n  createGrid(level) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid.innerHTML = \"\";\n    this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px);`;\n\n    level.forEach((square) => {\n      const div = document.createElement(\"div\");\n      div.classList.add(\"square\", CLASS_LIST[square]);\n      div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\n      this.DOMGrid.appendChild(div);\n      this.grid.push(div);\n\n      if (CLASS_LIST[square] == OBJECT_TYPE.DOT) this.dotCount++;\n    });\n  }\n\n  addObject(pos, classes) {\n    this.grid[pos].classList.add(...classes);\n  }\n\n  removeObject(pos, classes) {\n    this.grid[pos].classList.remove(...classes);\n  }\n\n  objectExist = (pos, object) => {\n    return this.grid[pos].classList.contains(object);\n  };\n\n  rotateDiv(pos, deg) {\n    this.grid[pos].style.transform = `rotate(${deg}deg)`;\n  }\n\n  moveCharacter(character) {\n    if (character.shouldMove()) {\n      const { nextMovePos, direction } = character.getNextMove(\n        this.objectExist\n      );\n\n      const { classesToRemove, classesToAdd } = character.makeMove();\n\n      if (character.rotation && nextMovePos !== character.pos) {\n        this.rotateDiv(nextMovePos, character.dir.rotation);\n        this.rotateDiv(character.pos, 0);\n      }\n\n      this.removeObject(character.pos, classesToRemove);\n      this.addObject(nextMovePos, classesToAdd);\n\n      character.setNewPos(nextMovePos, direction);\n    }\n  }\n\n  static createGameBoard(DOMGrid, level) {\n    const board = new this(DOMGrid);\n    board.createGrid(level);\n    return board;\n  }\n}\n\nexport default GameBoard;\n","import { OBJECT_TYPE, DIRECTIONS } from \"./setup\";\n\nclass Pacman {\n  constructor(speed, startPos) {\n    this.pos = startPos;\n    this.speed = speed;\n    this.dir = null;\n    this.timer = 0;\n    this.powerPill = false;\n    this.rotation = true;\n  }\n\n  shouldMove() {\n    if (!this.dir) return false;\n\n    if (this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n\n    this.timer++;\n  }\n\n  getNextMove(objectExist) {\n    let nextMovePos = this.pos + this.dir.movement;\n\n    if (\n      objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n    ) {\n      nextMovePos = this.pos;\n    }\n\n    return { nextMovePos, direction: this.dir };\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.PACMAN];\n    const classesToAdd = [OBJECT_TYPE.PACMAN];\n\n    return { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(nextMovePos) {\n    this.pos = nextMovePos;\n  }\n\n  handleKeyInput(e, objectExist) {\n    let dir;\n\n    if (e.keyCode >= 37 && e.keyCode <= 40) {\n      dir = DIRECTIONS[e.key];\n    } else {\n      return;\n    }\n\n    const nextMovePos = this.pos + dir.movement;\n    if (\n      objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n    )\n      return;\n    this.dir = dir;\n  }\n}\n\nexport default Pacman;\n","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\n\nclass Ghost {\n  constructor(speed, startPos, movement, name) {\n    this.name = name;\n    this.movement = movement;\n    this.startPos = startPos;\n    this.pos = startPos;\n    this.dir = DIRECTIONS.ArrowRight;\n    this.speed = speed;\n    this.timer = 0;\n    this.isScared = false;\n    this.rotation = false;\n  }\n\n  shouldMove() {\n    if (this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n\n    this.timer++;\n    return false;\n  }\n\n  getNextMove(objectExist) {\n    const { nextMovePos, direction } = this.movement(\n      this.pos,\n      this.dir,\n      objectExist\n    );\n\n    return { nextMovePos, direction };\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\n    let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\n\n    if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n\n    return { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(nextMovePos, direction) {\n    this.pos = nextMovePos;\n    this.dir = direction;\n  }\n}\n\nexport default Ghost;\n","import { LEVEL, OBJECT_TYPE } from \"./setup\";\nimport { randomMovement } from \"./GhostMoves\";\n\n// Classes\nimport GameBoard from \"./GameBoard\";\nimport Pacman from \"./Pacman\";\nimport Ghost from \"./Ghost\";\n\n// Sounds\nimport soundDot from \"../sounds/munch.wav\";\nimport soundPill from \"../sounds/pill.wav\";\nimport soundGameStart from \"../sounds/game_start.wav\";\nimport soundGameOver from \"../sounds/death.wav\";\nimport soundGhost from \"../sounds/eat_ghost.wav\";\n\n// Dom Elements\nconst gameGrid = document.querySelector(\"#game\");\nconst scoreTable = document.querySelector(\"#score\");\nconst startButton = document.querySelector(\"#start-button\");\n\n// Game Constants\nconst POWER_PILL_TIME = 10000; // ms\nconst GLOBAL_SPEED = 80;\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n// Initial Setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\n// Audio\nfunction playAudio(audio) {\n  const soundEffect = new Audio(audio);\n  soundEffect.play();\n}\n\nfunction gameOver(pacman, grid) {\n  playAudio(soundGameOver);\n\n  document.removeEventListener(\"keydown\", (e) =>\n    pacman.handleKeyInput(e, gameBoard.objectExist)\n  );\n\n  gameBoard.showGameStatus(gameWin);\n\n  clearInterval(timer);\n\n  startButton.classList.remove(\"hide\");\n\n  startButton.textContent = \"Play Again\";\n}\n\nfunction checkCollision(pacman, ghosts) {\n  const collidedGhost = ghosts.find((ghost) => pacman.pos === ghost.pos);\n\n  if (collidedGhost) {\n    if (pacman.powerPill) {\n      playAudio(soundGhost);\n\n      gameBoard.removeObject(collidedGhost.pos, [\n        OBJECT_TYPE.GHOST,\n        OBJECT_TYPE.SCARED,\n        collidedGhost.name,\n      ]);\n\n      collidedGhost.pos = collidedGhost.startPos;\n      score += 100;\n    } else {\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n      gameBoard.rotateDiv(pacman.pos, 0);\n      gameOver(pacman, gameGrid);\n    }\n  }\n}\n\nfunction gameLoop(pacman, ghosts) {\n  gameBoard.moveCharacter(pacman);\n  checkCollision(pacman, ghosts);\n\n  ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n  checkCollision(pacman, ghosts);\n\n  // Check if pacman eats a dot\n  if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n    playAudio(soundDot);\n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n    gameBoard.dotCount--;\n    score += 10;\n  }\n\n  // Check if pacman eats a powerpill\n  if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n    playAudio(soundPill);\n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n\n    pacman.powerPill = true;\n    score += 50;\n\n    clearTimeout(powerPillTimer);\n    powerPillTimer = setTimeout(\n      () => (pacman.powerPill = false),\n      POWER_PILL_TIME\n    );\n  }\n\n  // Change ghost scare mode depending on Powerpill\n  if (pacman.powerPill !== powerPillActive) {\n    powerPillActive = pacman.powerPill;\n    ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\n  }\n\n  // Check if all dots have been eaten\n  if (gameBoard.dotCount === 0) {\n    gameWin = true;\n    gameOver(pacman, ghosts);\n  }\n\n  // Show the score\n  scoreTable.innerHTML = score;\n}\n\nfunction startGame() {\n  playAudio(soundGameStart);\n\n  gameWin = false;\n  powerPillActive = false;\n  score = 0;\n\n  startButton.classList.add(\"hide\");\n\n  gameBoard.createGrid(LEVEL);\n\n  const pacman = new Pacman(2, 287);\n  gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n  document.addEventListener(\"keydown\", (e) => {\n    pacman.handleKeyInput(e, gameBoard.objectExist);\n  });\n\n  const ghosts = [\n    new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n    new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n    new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n    new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE),\n  ];\n\n  timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\n// Initialize game\nstartButton.addEventListener(\"click\", startGame);\n"]}