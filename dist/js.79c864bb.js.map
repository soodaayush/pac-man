{"version":3,"sources":["js/setup.js","js/ghostMoves.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","js/GameBoard.js","js/Pacman.js","js/Ghost.js","js/index.js"],"names":["GRID_SIZE","exports","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","_setup","require","randomMovement","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","_interopRequireDefault","e","__esModule","default","GameBoard","DOMGrid","_this","_classCallCheck2","_defineProperty2","pos","object","grid","classList","contains","dotCount","_createClass2","value","showGameStatus","gameWin","div","document","createElement","add","innerHTML","concat","appendChild","createGrid","level","_this2","style","cssText","forEach","square","push","addObject","classes","_this$grid$pos$classL","apply","_toConsumableArray2","removeObject","_this$grid$pos$classL2","remove","rotateDiv","deg","transform","moveCharacter","character","shouldMove","_character$getNextMov","getNextMove","_character$makeMove","makeMove","classesToRemove","classesToAdd","setNewPos","createGameBoard","board","_default","Pacman","speed","startPos","timer","powerPill","handleKeyInput","keyCode","Ghost","name","isScared","_this$movement","_ghostMoves","_GameBoard","_Pacman","_Ghost","_munch","_pill","_game_start","_death","_eat_ghost","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","score","powerPillActive","powerPillTimer","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","clearInterval","textContent","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","gameLoop","soundDot","soundPill","clearTimeout","setTimeout","startGame","soundGameStart","addEventListener","setInterval"],"mappings":";AA+EC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,QAAA,MAAA,QAAA,UAAA,QAAA,WAAA,QAAA,WAAA,QAAA,eAAA,EA/EM,IAAMA,EAASC,QAAAD,UAAG,GACZE,EAASD,QAAAC,UAAG,GACZC,EAAUF,QAAAE,WAAG,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWN,EACXO,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUN,EACVO,SAAU,KAIDI,EAAWV,QAAAU,YAAG,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAIAC,EAAUvB,QAAAuB,WAAG,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIDE,EAAKxB,QAAAwB,MAAG,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,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","file":"js.79c864bb.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\r\nexport const CELL_SIZE = 20;\r\nexport const DIRECTIONS = {\r\n  ArrowLeft: {\r\n    code: 37,\r\n    movement: -1,\r\n    rotation: 180,\r\n  },\r\n  ArrowUp: {\r\n    code: 38,\r\n    movement: -GRID_SIZE,\r\n    rotation: 270,\r\n  },\r\n  ArrowRight: {\r\n    code: 39,\r\n    movement: 1,\r\n    rotation: 0,\r\n  },\r\n  ArrowDown: {\r\n    code: 40,\r\n    movement: GRID_SIZE,\r\n    rotation: 90,\r\n  },\r\n};\r\n\r\nexport const OBJECT_TYPE = {\r\n  BLANK: \"blank\",\r\n  WALL: \"wall\",\r\n  DOT: \"dot\",\r\n  BLINKY: \"blinky\",\r\n  PINKY: \"pinky\",\r\n  INKY: \"inky\",\r\n  CLYDE: \"clyde\",\r\n  PILL: \"pill\",\r\n  PACMAN: \"pacman\",\r\n  GHOST: \"ghost\",\r\n  SCARED: \"scared\",\r\n  GHOSTLAIR: \"lair\",\r\n};\r\n\r\n// Lookup array for classes\r\nexport const CLASS_LIST = [\r\n  OBJECT_TYPE.BLANK,\r\n  OBJECT_TYPE.WALL,\r\n  OBJECT_TYPE.DOT,\r\n  OBJECT_TYPE.BLINKY,\r\n  OBJECT_TYPE.PINKY,\r\n  OBJECT_TYPE.INKY,\r\n  OBJECT_TYPE.CLYDE,\r\n  OBJECT_TYPE.PILL,\r\n  OBJECT_TYPE.PACMAN,\r\n  OBJECT_TYPE.GHOSTLAIR,\r\n];\r\n\r\n// prettier-ignore\r\nexport const LEVEL = [\r\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\r\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\r\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\r\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\r\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\r\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\r\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\r\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\r\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\r\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \r\n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \r\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \r\n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\r\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\r\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\r\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\r\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\r\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\r\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\r\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\r\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\r\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n];\r\n","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\r\n\r\n// Primitive random movement\r\nexport function randomMovement(position, direction, objectExist) {\r\n  let dir = direction;\r\n  let nextMovePos = position + dir.movement;\r\n\r\n  // Create an array from the directions object keys\r\n\r\n  const keys = Object.keys(DIRECTIONS);\r\n\r\n  while (\r\n    objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n    objectExist(nextMovePos, OBJECT_TYPE.GHOST)\r\n  ) {\r\n    // Get a random key from the key array\r\n    const key = keys[Math.floor(Math.random() * keys.length)];\r\n    // Set the move\r\n    dir = DIRECTIONS[key];\r\n    // Set the next move\r\n    nextMovePos = position + dir.movement;\r\n  }\r\n\r\n  return { nextMovePos, direction: dir };\r\n}\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from \"./setup\";\r\n\r\nclass GameBoard {\r\n  constructor(DOMGrid) {\r\n    this.dotCount = 0;\r\n    this.grid = [];\r\n    this.DOMGrid = DOMGrid;\r\n  }\r\n\r\n  showGameStatus(gameWin) {\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"game-status\");\r\n    div.innerHTML = `${gameWin ? \"WIN\" : \"GAME OVER\"}`;\r\n    this.DOMGrid.appendChild(div);\r\n  }\r\n\r\n  createGrid(level) {\r\n    this.dotCount = 0;\r\n    this.grid = [];\r\n    this.DOMGrid.innerHTML = \"\";\r\n    this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px);`;\r\n\r\n    level.forEach((square) => {\r\n      const div = document.createElement(\"div\");\r\n      div.classList.add(\"square\", CLASS_LIST[square]);\r\n      div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\r\n      this.DOMGrid.appendChild(div);\r\n      this.grid.push(div);\r\n\r\n      if (CLASS_LIST[square] == OBJECT_TYPE.DOT) this.dotCount++;\r\n    });\r\n  }\r\n\r\n  addObject(pos, classes) {\r\n    this.grid[pos].classList.add(...classes);\r\n  }\r\n\r\n  removeObject(pos, classes) {\r\n    this.grid[pos].classList.remove(...classes);\r\n  }\r\n\r\n  objectExist = (pos, object) => {\r\n    return this.grid[pos].classList.contains(object);\r\n  };\r\n\r\n  rotateDiv(pos, deg) {\r\n    this.grid[pos].style.transform = `rotate(${deg}deg)`;\r\n  }\r\n\r\n  moveCharacter(character) {\r\n    if (character.shouldMove()) {\r\n      const { nextMovePos, direction } = character.getNextMove(\r\n        this.objectExist\r\n      );\r\n\r\n      const { classesToRemove, classesToAdd } = character.makeMove();\r\n\r\n      if (character.rotation && nextMovePos !== character.pos) {\r\n        this.rotateDiv(nextMovePos, character.dir.rotation);\r\n        this.rotateDiv(character.pos, 0);\r\n      }\r\n\r\n      this.removeObject(character.pos, classesToRemove);\r\n      this.addObject(nextMovePos, classesToAdd);\r\n\r\n      character.setNewPos(nextMovePos, direction);\r\n    }\r\n  }\r\n\r\n  static createGameBoard(DOMGrid, level) {\r\n    const board = new this(DOMGrid);\r\n    board.createGrid(level);\r\n    return board;\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import { OBJECT_TYPE, DIRECTIONS } from \"./setup\";\r\n\r\nclass Pacman {\r\n  constructor(speed, startPos) {\r\n    this.pos = startPos;\r\n    this.speed = speed;\r\n    this.dir = null;\r\n    this.timer = 0;\r\n    this.powerPill = false;\r\n    this.rotation = true;\r\n  }\r\n\r\n  shouldMove() {\r\n    if (!this.dir) return false;\r\n\r\n    if (this.timer === this.speed) {\r\n      this.timer = 0;\r\n      return true;\r\n    }\r\n\r\n    this.timer++;\r\n  }\r\n\r\n  getNextMove(objectExist) {\r\n    let nextMovePos = this.pos + this.dir.movement;\r\n\r\n    if (\r\n      objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n      objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\r\n    ) {\r\n      nextMovePos = this.pos;\r\n    }\r\n\r\n    return { nextMovePos, direction: this.dir };\r\n  }\r\n\r\n  makeMove() {\r\n    const classesToRemove = [OBJECT_TYPE.PACMAN];\r\n    const classesToAdd = [OBJECT_TYPE.PACMAN];\r\n\r\n    return { classesToRemove, classesToAdd };\r\n  }\r\n\r\n  setNewPos(nextMovePos) {\r\n    this.pos = nextMovePos;\r\n  }\r\n\r\n  handleKeyInput(e, objectExist) {\r\n    let dir;\r\n\r\n    if (e.keyCode >= 37 && e.keyCode <= 40) {\r\n      dir = DIRECTIONS[e.key];\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    const nextMovePos = this.pos + dir.movement;\r\n    if (\r\n      objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n      objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\r\n    )\r\n      return;\r\n    this.dir = dir;\r\n  }\r\n}\r\n\r\nexport default Pacman;\r\n","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\r\n\r\nclass Ghost {\r\n  constructor(speed, startPos, movement, name) {\r\n    this.name = name;\r\n    this.movement = movement;\r\n    this.startPos = startPos;\r\n    this.pos = startPos;\r\n    this.dir = DIRECTIONS.ArrowRight;\r\n    this.speed = speed;\r\n    this.timer = 0;\r\n    this.isScared = false;\r\n    this.rotation = false;\r\n  }\r\n\r\n  shouldMove() {\r\n    if (this.timer === this.speed) {\r\n      this.timer = 0;\r\n      return true;\r\n    }\r\n\r\n    this.timer++;\r\n    return false;\r\n  }\r\n\r\n  getNextMove(objectExist) {\r\n    const { nextMovePos, direction } = this.movement(\r\n      this.pos,\r\n      this.dir,\r\n      objectExist\r\n    );\r\n\r\n    return { nextMovePos, direction };\r\n  }\r\n\r\n  makeMove() {\r\n    const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\r\n    let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\r\n\r\n    if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\r\n\r\n    return { classesToRemove, classesToAdd };\r\n  }\r\n\r\n  setNewPos(nextMovePos, direction) {\r\n    this.pos = nextMovePos;\r\n    this.dir = direction;\r\n  }\r\n}\r\n\r\nexport default Ghost;\r\n","import { LEVEL, OBJECT_TYPE } from \"./setup\";\r\nimport { randomMovement } from \"./ghostMoves\";\r\n\r\n// Classes\r\nimport GameBoard from \"./GameBoard\";\r\nimport Pacman from \"./Pacman\";\r\nimport Ghost from \"./Ghost\";\r\n\r\n// Sounds\r\nimport soundDot from \"../sounds/munch.wav\";\r\nimport soundPill from \"../sounds/pill.wav\";\r\nimport soundGameStart from \"../sounds/game_start.wav\";\r\nimport soundGameOver from \"../sounds/death.wav\";\r\nimport soundGhost from \"../sounds/eat_ghost.wav\";\r\n\r\n// Dom Elements\r\nconst gameGrid = document.querySelector(\"#game\");\r\nconst scoreTable = document.querySelector(\"#score\");\r\nconst startButton = document.querySelector(\"#start-button\");\r\n\r\n// Game Constants\r\nconst POWER_PILL_TIME = 10000; // ms\r\nconst GLOBAL_SPEED = 80;\r\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\r\n\r\n// Initial Setup\r\nlet score = 0;\r\nlet timer = null;\r\nlet gameWin = false;\r\nlet powerPillActive = false;\r\nlet powerPillTimer = null;\r\n\r\n// Audio\r\nfunction playAudio(audio) {\r\n  const soundEffect = new Audio(audio);\r\n  soundEffect.play();\r\n}\r\n\r\nfunction gameOver(pacman, grid) {\r\n  playAudio(soundGameOver);\r\n\r\n  document.removeEventListener(\"keydown\", (e) =>\r\n    pacman.handleKeyInput(e, gameBoard.objectExist)\r\n  );\r\n\r\n  gameBoard.showGameStatus(gameWin);\r\n\r\n  clearInterval(timer);\r\n\r\n  startButton.classList.remove(\"hide\");\r\n\r\n  startButton.textContent = \"Play Again\";\r\n}\r\n\r\nfunction checkCollision(pacman, ghosts) {\r\n  const collidedGhost = ghosts.find((ghost) => pacman.pos === ghost.pos);\r\n\r\n  if (collidedGhost) {\r\n    if (pacman.powerPill) {\r\n      playAudio(soundGhost);\r\n\r\n      gameBoard.removeObject(collidedGhost.pos, [\r\n        OBJECT_TYPE.GHOST,\r\n        OBJECT_TYPE.SCARED,\r\n        collidedGhost.name,\r\n      ]);\r\n\r\n      collidedGhost.pos = collidedGhost.startPos;\r\n      score += 100;\r\n    } else {\r\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\r\n      gameBoard.rotateDiv(pacman.pos, 0);\r\n      gameOver(pacman, gameGrid);\r\n    }\r\n  }\r\n}\r\n\r\nfunction gameLoop(pacman, ghosts) {\r\n  gameBoard.moveCharacter(pacman);\r\n  checkCollision(pacman, ghosts);\r\n\r\n  ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\r\n  checkCollision(pacman, ghosts);\r\n\r\n  // Check if pacman eats a dot\r\n  if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\r\n    playAudio(soundDot);\r\n\r\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\r\n    gameBoard.dotCount--;\r\n    score += 10;\r\n  }\r\n\r\n  // Check if pacman eats a powerpill\r\n  if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\r\n    playAudio(soundPill);\r\n\r\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\r\n\r\n    pacman.powerPill = true;\r\n    score += 50;\r\n\r\n    clearTimeout(powerPillTimer);\r\n    powerPillTimer = setTimeout(\r\n      () => (pacman.powerPill = false),\r\n      POWER_PILL_TIME\r\n    );\r\n  }\r\n\r\n  // Change ghost scare mode depending on Powerpill\r\n  if (pacman.powerPill !== powerPillActive) {\r\n    powerPillActive = pacman.powerPill;\r\n    ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\r\n  }\r\n\r\n  // Check if all dots have been eaten\r\n  if (gameBoard.dotCount === 0) {\r\n    gameWin = true;\r\n    gameOver(pacman, ghosts);\r\n  }\r\n\r\n  // Show the score\r\n  scoreTable.innerHTML = score;\r\n}\r\n\r\nfunction startGame() {\r\n  playAudio(soundGameStart);\r\n\r\n  gameWin = false;\r\n  powerPillActive = false;\r\n  score = 0;\r\n\r\n  startButton.classList.add(\"hide\");\r\n\r\n  gameBoard.createGrid(LEVEL);\r\n\r\n  const pacman = new Pacman(2, 287);\r\n  gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\r\n  document.addEventListener(\"keydown\", (e) => {\r\n    pacman.handleKeyInput(e, gameBoard.objectExist);\r\n  });\r\n\r\n  const ghosts = [\r\n    new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\r\n    new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\r\n    new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\r\n    new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE),\r\n  ];\r\n\r\n  timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\r\n}\r\n\r\n// Initialize game\r\nstartButton.addEventListener(\"click\", startGame);\r\n"]}